# Ambiente with: nodejs; git; docker;

- hosts: ambiente-NodeJS-aws
  vars_files:
    - vars/default.yml
  become: yes
  gather_facts: false

  tasks:

  # Docker
  - name: Install docker packages
    remote_user: ubuntu
    apt:
      name: ['apt-transport-https','ca-certificates', 'curl', 'software-properties-common']
      state: present
      update_cache: yes
    tags:
      - docker

  - name: Add Docker s GPG key for ubuntu from official site
    remote_user: ubuntu
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    tags:
      - docker

  - name: Verify gpg key with the fingerprint
    remote_user: ubuntu
    apt_key:
      id: 0EBFCD88
      state: present
    tags:
      - docker

  - name: Configure Docker for ubuntu stable repository
    remote_user: ubuntu
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
      update_cache: yes
    tags:
      - docker

  - name: Update apt packages
    remote_user: ubuntu
    apt:
      update_cache: yes
    tags:
      - docker

  - name: Install docker-ce
    remote_user: ubuntu
    apt:
      name: docker-ce
      state: present
      update_cache: yes
    tags:
      - docker

  - name: Add "ubuntu" user to "docker" group
    remote_user: ubuntu
    user:
      name: "ubuntu"
      group: "docker"
      append: yes
    tags:
      - docker

  - name: Install docker-compose from official github repo
    remote_user: ubuntu
    get_url:
      url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'

      
  # Git
  - name: Copy ssh file
    ansible.builtin.copy:
      src: ./ssh-keys/id_rsa
      dest: ~/.ssh/id_rsa
      owner: ubuntu
      group: ubuntu

  - name: ensure git pkg installed
    ansible.builtin.apt:
      name: git
      state: present
      update_cache: true

  - name: add github to known hosts
    shell: "ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts"

  - name: Clone the repo app
    ansible.builtin.git:
        repo: "{{ repo }}"
        dest: "{{ dest }}"

  # Nginx
  - name: ensure nginx is at the latest version
    apt: name=nginx state=latest

  - name: start nginx
    service:
        name: nginx
        state: started

  - name: copy the local nginx config file and restart nginx
    copy:
      src: ./nginx/static_site.cfg
      dest: /etc/nginx/sites-available/static_site.cfg

  - name: create symlink
    file:
      src: /etc/nginx/sites-available/static_site.cfg
      dest: /etc/nginx/sites-enabled/default
      state: link
  - name: restart nginx
    service:
      name: nginx
      state: restarted

  # api
  - name: execute api
    ansible.builtin.shell:
      cmd: cd app, docker-compose build, docker-compose up -d

